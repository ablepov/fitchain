// –ü—Ä–æ—Å—Ç–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –±—É—Ñ–µ—Ä–Ω–æ–≥–æ –º–µ—Ö–∞–Ω–∏–∑–º–∞ —á–µ—Ä–µ–∑ –ø—Ä—è–º–æ–π –±—Ä–∞—É–∑–µ—Ä–Ω—ã–π –¥–æ—Å—Ç—É–ø
const { chromium } = require('playwright');

async function checkBuffer() {
  console.log('üöÄ –û—Ç–∫—Ä—ã–≤–∞–µ–º –±—Ä–∞—É–∑–µ—Ä...');
  const browser = await chromium.launch({ headless: false, slowMo: 1000 });
  const page = await browser.newPage();

  try {
    console.log('üåê –ü–µ—Ä–µ—Ö–æ–¥–∏–º –Ω–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ...');
    await page.goto('http://localhost:3000');

    console.log('üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –∫–Ω–æ–ø–∫–∏ –≤—Ö–æ–¥–∞...');
    const loginButton = page.locator('button').filter({ hasText: '–í–æ–π—Ç–∏' }).first();
    await loginButton.waitFor({ timeout: 10000 });

    console.log('üîê –ù–∞–∂–∏–º–∞–µ–º –∫–Ω–æ–ø–∫—É –≤—Ö–æ–¥–∞...');
    await loginButton.click();
    await page.waitForURL(/.*auth.*/, { timeout: 10000 });

    console.log('üìù –í–≤–æ–¥–∏–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è –≤—Ö–æ–¥–∞...');
    await page.fill('input[type="email"]', 'ablepov@gmail.com');
    await page.fill('input[type="password"]', 'qazZAQ54321!');
    await page.click('button[type="submit"]');

    console.log('‚è≥ –ñ–¥–µ–º –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø–æ—Å–ª–µ –≤—Ö–æ–¥–∞...');
    await page.waitForURL(/.*/, { timeout: 10000 }); // –ñ–¥–µ–º –ª—é–±–æ–π URL –ø–æ—Å–ª–µ –≤—Ö–æ–¥–∞

    console.log('üèãÔ∏è –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏–π...');
    const createButton = page.locator('text=–°–æ–∑–¥–∞—Ç—å –±–∞–∑–æ–≤—ã–µ (3)');
    await createButton.waitFor({ timeout: 10000 });

    console.log('‚öôÔ∏è –°–æ–∑–¥–∞–µ–º –±–∞–∑–æ–≤—ã–µ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏—è...');
    await createButton.click();

    console.log('üìã –ñ–¥–µ–º –ø–æ—è–≤–ª–µ–Ω–∏—è —É–ø—Ä–∞–∂–Ω–µ–Ω–∏–π...');
    await page.waitForSelector('text=pullups', { timeout: 10000 });

    console.log('üéØ –í—ã–±–∏—Ä–∞–µ–º —É–ø—Ä–∞–∂–Ω–µ–Ω–∏–µ pullups...');
    await page.click('text=pullups');

    console.log('üîç –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –∫–Ω–æ–ø–∫–∏ –≤ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏–∏...');
    const buttons = page.locator('button');
    const buttonCount = await buttons.count();
    console.log(`–ù–∞–π–¥–µ–Ω–æ ${buttonCount} –∫–Ω–æ–ø–æ–∫`);

    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –≤—Å–µ—Ö –∫–Ω–æ–ø–∫–∞—Ö
    for (let i = 0; i < buttonCount; i++) {
      const button = buttons.nth(i);
      const text = await button.textContent();
      const isVisible = await button.isVisible();
      console.log(`–ö–Ω–æ–ø–∫–∞ ${i}: "${text}" (–≤–∏–¥–∏–º–∞: ${isVisible})`);
    }

    // –ò—â–µ–º –∫–Ω–æ–ø–∫—É —Å —á–∏—Å–ª–æ–º
    let targetButton = null;
    for (let i = 0; i < buttonCount; i++) {
      const button = buttons.nth(i);
      const text = await button.textContent();

      if (text && /^\+[0-9]+$/.test(text)) {
        targetButton = button;
        console.log(`üéØ –í—ã–±—Ä–∞–Ω–∞ –∫–Ω–æ–ø–∫–∞ –¥–ª—è —Ç–µ—Å—Ç–∞: ${text}`);
        break;
      }
    }

    if (!targetButton) {
      console.log('‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω–∞ –∫–Ω–æ–ø–∫–∞ —Å —á–∏—Å–ª–æ–º');
      await page.screenshot({ path: 'no-button.png' });
      return;
    }

    console.log('üß™ –¢–µ—Å—Ç–∏—Ä—É–µ–º –±—É—Ñ–µ—Ä–Ω—ã–π –º–µ—Ö–∞–Ω–∏–∑–º...');
    await targetButton.click();

    console.log('‚è≥ –ñ–¥–µ–º –ø–æ—è–≤–ª–µ–Ω–∏—è –±—É—Ñ–µ—Ä–Ω–æ–≥–æ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞...');
    await page.waitForTimeout(2000);

    console.log('üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º –±—É—Ñ–µ—Ä–Ω—ã–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å...');
    const bufferElement = page.locator('text=–ë—É—Ñ–µ—Ä:');
    const isBufferVisible = await bufferElement.isVisible();

    if (isBufferVisible) {
      console.log('‚úÖ –ë—É—Ñ–µ—Ä–Ω—ã–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –Ω–∞–π–¥–µ–Ω!');
      const bufferText = await bufferElement.textContent();
      console.log(`üìä –¢–µ–∫—Å—Ç –±—É—Ñ–µ—Ä–∞: ${bufferText}`);

      console.log('üîÑ –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å—É–º–º–∏—Ä–æ–≤–∞–Ω–∏–µ...');
      await targetButton.click();

      await page.waitForTimeout(2000);

      const newBufferText = await bufferElement.textContent();
      console.log(`üìä –ù–æ–≤—ã–π —Ç–µ–∫—Å—Ç –±—É—Ñ–µ—Ä–∞: ${newBufferText}`);

      if (newBufferText && bufferText && newBufferText !== bufferText) {
        console.log('‚úÖ –ë—É—Ñ–µ—Ä —Ä–∞–±–æ—Ç–∞–µ—Ç –ø—Ä–∞–≤–∏–ª—å–Ω–æ!');
        console.log(`–†–µ–∑—É–ª—å—Ç–∞—Ç: ${bufferText} ‚Üí ${newBufferText}`);
      } else {
        console.log('‚ùå –ë—É—Ñ–µ—Ä –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç');
        await page.screenshot({ path: 'buffer-problem.png' });
      }

    } else {
      console.log('‚ùå –ë—É—Ñ–µ—Ä–Ω—ã–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –Ω–µ –ø–æ—è–≤–∏–ª—Å—è');
      await page.screenshot({ path: 'no-buffer.png' });
      console.log('–°–∫—Ä–∏–Ω—à–æ—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω –≤ no-buffer.png');
    }

    console.log('üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–Ω–æ–ø–∫—É –æ—Ç–º–µ–Ω—ã –±—É—Ñ–µ—Ä–∞...');
    const cancelButton = page.locator('[aria-label="–û—Ç–º–µ–Ω–∏—Ç—å –±—É—Ñ–µ—Ä"]');
    const hasCancelButton = await cancelButton.isVisible();

    if (hasCancelButton) {
      console.log('‚úÖ –ö–Ω–æ–ø–∫–∞ –æ—Ç–º–µ–Ω—ã –±—É—Ñ–µ—Ä–∞ –Ω–∞–π–¥–µ–Ω–∞');
    } else {
      console.log('‚ùå –ö–Ω–æ–ø–∫–∞ –æ—Ç–º–µ–Ω—ã –±—É—Ñ–µ—Ä–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞');
    }

    console.log('‚è≥ –û—Å—Ç–∞–≤–ª—è–µ–º –±—Ä–∞—É–∑–µ—Ä –æ—Ç–∫—Ä—ã—Ç—ã–º –¥–ª—è –≤–∏–∑—É–∞–ª—å–Ω–æ–π –∏–Ω—Å–ø–µ–∫—Ü–∏–∏...');
    console.log('–ó–∞–∫—Ä–æ–π—Ç–µ –±—Ä–∞—É–∑–µ—Ä –≤—Ä—É—á–Ω—É—é –∫–æ–≥–¥–∞ –∑–∞–∫–æ–Ω—á–∏—Ç–µ –ø—Ä–æ–≤–µ—Ä–∫—É');

    // –ñ–¥–µ–º 30 —Å–µ–∫—É–Ω–¥ –¥–ª—è –≤–∏–∑—É–∞–ª—å–Ω–æ–π –∏–Ω—Å–ø–µ–∫—Ü–∏–∏
    await page.waitForTimeout(30000);

  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏:', error.message);
    await page.screenshot({ path: 'error.png' });
    console.log('–°–∫—Ä–∏–Ω—à–æ—Ç –æ—à–∏–±–∫–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω –≤ error.png');
  } finally {
    await browser.close();
  }
}

checkBuffer().catch(console.error);